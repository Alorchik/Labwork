import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
    data = pd.read_csv(url)
    return data
data = load_data()
# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("–î–∞—à–±–æ–∞—Ä–¥ –ø–æ–¥ –¥–∞—Ç–∞—Å–µ—Ç –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –¢–∏—Ç–∞–Ω–∏–∫–∞üóªüö¢")
# 1. –û–ø–∏—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
st.header("–û–ø–∏—Å–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
st.write("**–†–∞–∑–º–µ—Ä —Ç–∞–±–ª–∏—Ü—ã:**", data.shape)
st.write("**–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:**")
st.write(data.dtypes)
st.write("**–í–∏–¥_—Ç–∞–±–ª–∏—Ü—ã:**")
st.write(data.head())
# 2. –ì—Ä–∞—Ñ–∏–∫–∏
st.header("–ì—Ä–∞—Ñ–∏–∫–∏")
# –ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤
st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–æ–≤ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤")
fig1, ax1 = plt.subplots()
sns.histplot(data['Age'].dropna(), kde=True, ax=ax1)
st.pyplot(fig1)
# –ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ –ø–æ–ª—É
st.subheader("–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω")
gender_counts = data['Sex'].value_counts()
fig2, ax2 = plt.subplots()
ax2.pie(gender_counts, labels=gender_counts.index, autopct='%1.1f%%')
st.pyplot(fig2)
# Boxplot –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É –∏ –∫–ª–∞—Å—Å—É –±–∏–ª–µ—Ç–∞
st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞ –ø–æ –∫–ª–∞—Å—Å–∞–º –±–∏–ª–µ—Ç–æ–≤")
fig3, ax3 = plt.subplots()
sns.boxplot(x='Pclass', y='Age', data=data, ax=ax3)
st.pyplot(fig3)
# –ì—Ä–∞—Ñ–∏–∫ –≤—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏ –ø–æ –∫–ª–∞—Å—Å—É –±–∏–ª–µ—Ç–∞ (countplot)
st.subheader("3. –ê–Ω–∞–ª–∏–∑ –≤—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏")
# –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ –±–∏–ª–µ—Ç–∞
selected_class = st.radio(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:",
    [1, 2, 3],
    horizontal=True
)
# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
class_data = data[data['Pclass'] == selected_class]
# –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
fig4, ax4 = plt.subplots(figsize=(10, 6))
sns.countplot(
    x='Sex',
    hue='Survived',
    data=class_data,
    ax=ax4,
    palette=['#ff6b6b', '#51cf66']
)
# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥—Ä–∞—Ñ–∏–∫–∞
ax4.set_title(f"–í—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç—å –≤ {selected_class}-–º –∫–ª–∞—Å—Å–µ")
ax4.set_xlabel("–ü–æ–ª")
ax4.set_ylabel("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤")
ax4.legend(['–ü–æ–≥–∏–±', '–í—ã–∂–∏–ª'])
# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
for p in ax4.patches:
    ax4.annotate(
        f"{p.get_height()}",
        (p.get_x() + p.get_width()/2, p.get_height()),
        ha='center',
        va='center',
        xytext=(0, 5),
        textcoords='offset points'
    )
# –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
survival_rate = class_data['Survived'].mean()
st.metric(
    f"–û–±—â–∞—è –≤—ã–∂–∏–≤–∞–µ–º–æ—Å—Ç—å –≤ {selected_class}-–º –∫–ª–∞—Å—Å–µ",
    f"{survival_rate:.1%}"
)
st.pyplot(fig4)
# 4. –í—ã–≤–æ–¥ N —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
st.header("3. –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö")
n_rows = st.slider("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è", 1, 891, 5)
st.write(data.head(n_rows))
